using SinkhornDistance, Test, LinearAlgebra

function standard_domain_test()
    a = ones(10)
    a ./= norm(a)
    b = ones(10)
    b ./= norm(b)
    distmat = [0.0708445 0.213782 0.830741 0.161567 0.126308 0.197572 0.263178 0.521023 0.886935 0.210303; 0.738839 0.469666 0.349978 0.467538 0.159942 0.568481 0.229705 0.798778 0.996901 0.744447; 0.251294 0.962068 0.0230593 0.604751 0.518694 0.800253 0.956005 0.155018 0.15288 0.678453; 0.466458 0.706211 0.384015 0.682843 0.458592 0.211108 0.887092 0.645072 0.248124 0.0135312; 0.313468 0.584226 0.077044 0.462425 0.277125 0.155386 0.369473 0.154268 0.97913 0.709205; 0.151998 0.308201 0.756366 0.949735 0.463148 0.863914 0.0310361 0.228604 0.868917 0.283224; 0.622743 0.207346 0.806095 0.968863 0.120488 0.894689 0.814035 0.255838 0.680752 0.756945; 0.298414 0.497353 0.0024839 0.0771899 0.397156 0.2609 0.578863 0.124131 0.275546 0.753131; 0.959001 0.179972 0.384184 0.0529075 0.468867 0.43924 0.580535 0.983929 0.991758 0.320234; 0.672765 0.797271 0.0301696 0.649507 0.644529 0.918583 0.574952 0.622244 0.925437 0.662944]
    distmat = distmat' * distmat
    distmat ./= norm(distmat)
    sinkhorn_plan(distmat, a, b; rounds=3)
end

function log_domain_test()
    a = ones(10)
    a ./= norm(a)
    b = ones(10)
    b ./= norm(b)
    distmat = [0.0708445 0.213782 0.830741 0.161567 0.126308 0.197572 0.263178 0.521023 0.886935 0.210303; 0.738839 0.469666 0.349978 0.467538 0.159942 0.568481 0.229705 0.798778 0.996901 0.744447; 0.251294 0.962068 0.0230593 0.604751 0.518694 0.800253 0.956005 0.155018 0.15288 0.678453; 0.466458 0.706211 0.384015 0.682843 0.458592 0.211108 0.887092 0.645072 0.248124 0.0135312; 0.313468 0.584226 0.077044 0.462425 0.277125 0.155386 0.369473 0.154268 0.97913 0.709205; 0.151998 0.308201 0.756366 0.949735 0.463148 0.863914 0.0310361 0.228604 0.868917 0.283224; 0.622743 0.207346 0.806095 0.968863 0.120488 0.894689 0.814035 0.255838 0.680752 0.756945; 0.298414 0.497353 0.0024839 0.0771899 0.397156 0.2609 0.578863 0.124131 0.275546 0.753131; 0.959001 0.179972 0.384184 0.0529075 0.468867 0.43924 0.580535 0.983929 0.991758 0.320234; 0.672765 0.797271 0.0301696 0.649507 0.644529 0.918583 0.574952 0.622244 0.925437 0.662944]
    distmat = distmat' * distmat
    distmat ./= norm(distmat)
    sinkhorn_plan_log(distmat, a, b; rounds=1)
end

function tests()
    @testset "numerical stability on reasonable inputs" begin
        @test !any(isnan.(standard_domain_test()))
        @test !any(isnan.(log_domain_test()))
    end
end

tests()
